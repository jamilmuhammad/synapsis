version: '3.8'

services:
  userdb:
    image: postgres:13
    container_name: userdb
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - test-synapsis-network

  api-gateway:
    hostname: api-gateway-host
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    container_name: api-gateway
    restart: on-failure
    depends_on:
      - user-service
    environment:
      APP_NAME: user-service
      APP_HTTP_PORT: 9000
      DB_HOST: userdb
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: pass
      DB_NAME: userdb
      Access_Token: 'secret123'
      Refresh_Token: 'secret321'
    ports:
      - "9000:9000"
    networks:
      - test-synapsis-network
    volumes:
      - ./data:/data

  user-service:
    hostname: user-service-host
    build:
      context: .
      dockerfile: ./user-service/Dockerfile
    container_name: user-service
    restart: on-failure
    depends_on:
      - userdb
    environment:
      APP_NAME: user-service
      APP_HTTP_PORT: 50051
      DB_HOST: userdb
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: pass
      DB_NAME: userdb
      Access_Token: 'secret123'
      Refresh_Token: 'secret321'
    ports:
      - "9001:9001"
    networks:
      - test-synapsis-network
    volumes:
      - ./data:/data

  jaeger:
    hostname: jaeger-host
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "9001:9001/udp"
    networks:
      - test-synapsis-network

networks:
  test-synapsis-network:
    driver: bridge

volumes:
  postgres_data:
